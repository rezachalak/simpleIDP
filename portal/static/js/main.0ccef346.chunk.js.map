{"version":3,"sources":["components/Navbar.tsx","services/api.ts","components/Clouds.tsx","components/Clusters.tsx","components/Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","React","createElement","Link","to","api","axios","create","baseURL","Clouds","clouds","setClouds","useState","useEffect","get","then","response","data","catch","error","console","map","cloud","key","id","name","provider","region","Clusters","clusters","setClusters","cluster","status","is_active","Projects","projects","setProjects","project","description","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"oNAqBeA,MAlBUA,IAEjBC,IAAAC,cAAA,WACID,IAAAC,cAAA,UACID,IAAAC,cAAA,UACID,IAAAC,cAACC,IAAI,CAACC,GAAG,WAAU,WAEvBH,IAAAC,cAAA,UACID,IAAAC,cAACC,IAAI,CAACC,GAAG,aAAY,aAEzBH,IAAAC,cAAA,UACID,IAAAC,cAACC,IAAI,CAACC,GAAG,aAAY,eCR1BC,YAJHC,EAAMC,OAAO,CACrBC,QAAS,+BCiCEC,MAzBUA,KACrB,MAAOC,EAAQC,GAAaC,mBAAkB,IAU9C,OARAC,oBAAU,KACNR,EAAIS,IAAa,WACZC,KAAKC,IACFL,EAAUK,EAASC,QAEtBC,MAAMC,GAASC,QAAQD,MAAM,yBAA0BA,KAC7D,IAGClB,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UACKQ,EAAOW,IAAIC,GACRrB,IAAAC,cAAA,MAAIqB,IAAKD,EAAME,IACVF,EAAMG,KAAK,KAAGH,EAAMI,SAAS,OAAKJ,EAAMK,YCQlDC,MAzBYA,KACvB,MAAOC,EAAUC,GAAelB,mBAAoB,IAUpD,OARAC,oBAAU,KACNR,EAAIS,IAAe,aACdC,KAAKC,IACFc,EAAYd,EAASC,QAExBC,MAAMC,GAASC,QAAQD,MAAM,2BAA4BA,KAC/D,IAGClB,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UACK2B,EAASR,IAAIU,GACV9B,IAAAC,cAAA,MAAIqB,IAAKQ,EAAQP,IACZO,EAAQN,KAAK,MAAIM,EAAQC,OAAO,MAAID,EAAQE,UAAY,SAAW,gBCO7EC,MAzBYA,KACvB,MAAOC,EAAUC,GAAexB,mBAAoB,IAUpD,OARAC,oBAAU,KACNR,EAAIS,IAAe,aACdC,KAAKC,IACFoB,EAAYpB,EAASC,QAExBC,MAAMC,GAASC,QAAQD,MAAM,2BAA4BA,KAC/D,IAGClB,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UACKiC,EAASd,IAAIgB,GACVpC,IAAAC,cAAA,MAAIqB,IAAKc,EAAQb,IACZa,EAAQZ,KAAK,MAAIY,EAAQC,iBCLnCC,MAfOA,IAEdtC,IAAAC,cAACsC,IAAM,KACHvC,IAAAC,cAAA,WACID,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAACuC,IAAM,KAAC,+BACJxC,IAAAC,cAACwC,IAAK,CAACC,KAAK,UAAUC,QAAS3C,IAAAC,cAACO,EAAM,QACtCR,IAAAC,cAACwC,IAAK,CAACC,KAAK,YAAYC,QAAS3C,IAAAC,cAAC0B,EAAQ,QAC1C3B,IAAAC,cAACwC,IAAK,CAACC,KAAK,YAAYC,QAAS3C,IAAAC,cAACgC,EAAQ,SACrC,iCCFVW,MAZUC,IACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAlC,KAAAiC,EAAAE,KAAA,UAAqBnC,KAAKoC,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCHDW,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH5D,IAAAC,cAACD,IAAM6D,WAAU,KACf7D,IAAAC,cAACqC,EAAG,QAORM","file":"static/js/main.0ccef346.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar: React.FC = () => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/clouds\">Clouds</Link>\n                </li>\n                <li>\n                    <Link to=\"/clusters\">Clusters</Link>\n                </li>\n                <li>\n                    <Link to=\"/projects\">Projects</Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://127.0.0.1:8000/api/',\n});\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\n\ninterface Cloud {\n    id: number;\n    name: string;\n    provider: string;\n    region: string;\n    endpoint: string;\n}\n\nconst Clouds: React.FC = () => {\n    const [clouds, setClouds] = useState<Cloud[]>([]);\n\n    useEffect(() => {\n        api.get<Cloud[]>('clouds/')\n            .then(response => {\n                setClouds(response.data);\n            })\n            .catch(error => console.error('Error fetching clouds:', error));\n    }, []);\n\n    return (\n        <div>\n            <h1>Clouds</h1>\n            <ul>\n                {clouds.map(cloud => (\n                    <li key={cloud.id}>\n                        {cloud.name} ({cloud.provider}) - {cloud.region}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Clouds;\n","import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\n\ninterface Cluster {\n    id: number;\n    name: string;\n    status: string;\n    is_active: boolean;\n    cloud: string;\n}\n\nconst Clusters: React.FC = () => {\n    const [clusters, setClusters] = useState<Cluster[]>([]);\n\n    useEffect(() => {\n        api.get<Cluster[]>('clusters/')\n            .then(response => {\n                setClusters(response.data);\n            })\n            .catch(error => console.error('Error fetching clusters:', error));\n    }, []);\n\n    return (\n        <div>\n            <h1>Clusters</h1>\n            <ul>\n                {clusters.map(cluster => (\n                    <li key={cluster.id}>\n                        {cluster.name} - {cluster.status} - {cluster.is_active ? 'Active' : 'Inactive'}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Clusters;\n","import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\n\ninterface Project {\n    id: number;\n    name: string;\n    description: string;\n    cluster: string;\n}\n\nconst Projects: React.FC = () => {\n    const [projects, setProjects] = useState<Project[]>([]);\n\n    useEffect(() => {\n        api.get<Project[]>('projects/')\n            .then(response => {\n                setProjects(response.data);\n            })\n            .catch(error => console.error('Error fetching projects:', error));\n    }, []);\n\n    return (\n        <div>\n            <h1>Projects</h1>\n            <ul>\n                {projects.map(project => (\n                    <li key={project.id}>\n                        {project.name} - {project.description}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Projects;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Clouds from './components/Clouds';\nimport Clusters from './components/Clusters';\nimport Projects from './components/Projects';\n\nconst App: React.FC = () => {\n    return (\n        <Router>\n            <div>\n                <Navbar />\n                <Routes> // Changed Switch to Routes\n                    <Route path=\"/clouds\" element={<Clouds />} /> \n                    <Route path=\"/clusters\" element={<Clusters />} />\n                    <Route path=\"/projects\" element={<Projects />} />\n                </Routes> // Changed Switch to Routes\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
